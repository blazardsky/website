---
interface Props {
	title: string;
	description?: string;
	bodyClass?: string;
}
const { title, description, bodyClass } = Astro.props;

import {cn} from "@lib/utils"
import { Image } from 'astro:assets';
import NicPlayer from '@components/footer/NicPlayer.astro';
import AccessibilityIcon from '@svg/accessibility.svg?raw'
import niccoloSvg from '@svg/niccolo.svg?raw'

// importo le svg che uso come clip-path per i BigPortfolioButton e per le sezioni colorate e in altri posti nel sito
import clip01 from '@svg/PortfolioClip_01.svg?raw';
import clip02 from '@svg/PortfolioClip_02.svg?raw';

// English link traduzione google
const englishLink = `https://nicc--olo-com.translate.goog${Astro.url.pathname}?_x_tr_sl=it&_x_tr_tl=en&_x_tr_hl=it&_x_tr_pto=wapp&_x_tr_hist=true`

import SOCIALS from '@data/socials.json'
import Menu from "@components/Menu.astro";

import { isMenuOpen } from '@lib/store';
const menuIsOpen = isMenuOpen.get()
---

<!doctype html>
<html lang="it">
	<head>
		<meta charset="utf-8" />
		<meta name="description" content={description? description : 'Portfolio - Niccol√≤ Agnoletti: web developer + designer + digital illustrator.'} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://api.fontshare.com/v2/css?f[]=clash-display@1&f[]=kalam@400&display=swap" rel="stylesheet">  
	</head>
	<body class={cn("overscroll-y-contain bg-background text-foreground", bodyClass)}>
		<header class="flex flex-row z-50 relative">
			{Astro.url.pathname !== '/' && (<a class="px-4" href="/">
				<span class="border-foreground border-b-2 border-x-2 text-foreground py-1 px-4 md:px-8 font-extrabold text-base uppercase block transition-all ease-out hover:scale-y-110 origin-top">HOME</span></a>
			)}
			<div class="w-full flex justify-end px-4">
				<ul role="menu" class="flex flex-row gap-1">
					<li class="border-foreground border-b-2 border-x-2 bg-foreground fill-background p-1 transition-all ease-out hover:scale-y-110 origin-top flex m-0 has-[:active]:active:bg-accent has-[:active]:active:border-accent">
						<button role="menuitem" onclick="toggleReadabilityImprovement()" title="Rendi il testo pi√π leggibile">
							<span class="sr-only">Tasto accessibilit√†</span>
							<Fragment set:html={AccessibilityIcon} />
						</button>
					</li>
					<li class="border-foreground border-b-2 border-x-2 bg-foreground text-background p-1 font-extrabold text-base uppercase block transition-all ease-out hover:scale-y-110 origin-top m-0">
						<a role="menuitem" aria-label="Switch language" title="Read in english with Google" href={englishLink} target="_blank" class="no-underline" rel="noopener nofollow noreferrer">
							<abbr class="no-underline" title="ENGLISH">EN</abbr>
						</a>
					</li>
					<!-- <li class="border-foreground border-b-2 border-x-2 bg-foreground fill-background p-1 flex m-0">
						<svg width="16" height="16" viewBox="0 0 16 16" fill="none" class="m-auto" xmlns="http://www.w3.org/2000/svg">
							<path fill-rule="evenodd" clip-rule="evenodd" d="M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16ZM13.0973 5.88864C12.82 5.21926 12.4136 4.61104 11.9013 4.09872L8.00002 8L4.09874 11.9013C4.61106 12.4136 5.21928 12.82 5.88866 13.0973C6.55804 13.3745 7.27548 13.5172 8.00002 13.5172C8.72455 13.5172 9.44199 13.3745 10.1114 13.0973C10.7808 12.82 11.389 12.4136 11.9013 11.9013C12.4136 11.389 12.82 10.7807 13.0973 10.1114C13.3746 9.44197 13.5173 8.72453 13.5173 8C13.5173 7.27547 13.3746 6.55803 13.0973 5.88864Z" fill="#EDE1CA"/>
							</svg>							
					</li> -->
					<li class="border-foreground border-b-2 border-x-2 bg-foreground text-background p-1 font-extrabold text-base uppercase block transition-all ease-out hover:scale-y-110 origin-top m-0">
						<button role="menuitem" id="toggleMenu" aria-label={menuIsOpen ? "apri il menu" : "chiudi il menu"} class="px-4 md:px-8 uppercase">
							menu
						</button>
					</li>
				</ul>
			</div>
		</header>
		<Menu />
		<slot />
		<footer class="mt-12 pt-32">
			<Fragment set:html={niccoloSvg} />
			<ul class="flex flex-row gap-6 mx-auto w-fit p-2 mt-8">
				{
					SOCIALS.map(({name, link, img}) => (
						<li class="mix-blend-multiply">
							<a href={link} rel="me noopener" target="_blank" class="hover:animate-pulse focus:animate-pulse">
								<Image loading="lazy" src={img} alt={name} height="48" width="48" />
							</a>
						</li>
					)
				)}
			</ul>
				
			<NicPlayer bodyClass={bodyClass} />

			<div class="w-full checkerboard-wrapper">
				<div class="w-full checkerboard"></div>
				<div class="w-[calc(100%+var(--size))] -ml-[var(--size)] checkerboard"></div>
			</div>
			<div class="bg-accent text-accent-dark uppercase px-2 pt-4 pb-0.5 w-full flex flex-col md:flex-row gap-2 md:items-end">
				<p class="font-extrabold text-5xl">Niccol√≤ Agnoletti</p>
				<p class="p-1 text-xs">Copyright ¬© 2024-2025 &mdash; <a href="/privacy-policy">Privacy policy</a><br/>
					<strong>IT02487460517</strong> - <a href="https://blazardsky.space" rel="me">blazardsky.space</a> // <span class="text-nowrap">nicc-olo.com</span>
				</p>
				<p class="flex-grow md:text-right">
					<a href="/credits">
						Credits
					</a><br class="hidden md:block"/>
					üìç Padova 
				</p>
			</div> 
		</footer>

		<!-- clip path svg per portfolio e blocchi vari -->
		<Fragment set:html={clip01} />
		<Fragment set:html={clip02} />
	</body>
</html>



<style>
	.checkerboard-wrapper {
		--size: .75rem;
		--color-1: black;
		--color-2: white;
		height: calc(var(--size) * 2);
		overflow: clip;
	}
	.checkerboard {
		height: var(--size);
		background: repeating-linear-gradient(90deg,var(--color-1) 0,var(--color-1) var(--size),var(--color-2) var(--size),var(--color-2) calc(var(--size) * 2));
	}

</style>
<style is:global>

	@font-face {
      font-family: 'NISCRIPT';
      src: url('/assets/fonts/NISCRIPT-Regular.woff2') format('woff2'),
        url('/assets/fonts/NISCRIPT-Regular.woff') format('woff');
      font-weight: normal;
      font-style: normal;
      font-display: swap;
	}


	html {
		font-family: 'Clash Display', system-ui, sans-serif;
		line-height: 135%;
	}
	.font-cursive {
		font-size: 165%;
		font-family: 'NISCRIPT', serif;
	}
	code {
		font-family:
			Menlo,
			Monaco,
			Lucida Console,
			Liberation Mono,
			DejaVu Sans Mono,
			Bitstream Vera Sans Mono,
			Courier New,
			monospace;
	}

	.clip01 {
		clip-path: url(#containerClip01);
	}
	.clip02 {
		clip-path: url(#containerClip02);
	}

	.clip03 {
		clip-path: polygon(5% 0%, 21% 1%, 43% 0%, 70% 1%, 84% 0%, 99% 2%, 100% 15%, 100% 24%, 99% 94%, 100% 100%, 89% 99%, 60% 100%, 27% 98%, 1% 99%, 0 91%, 1% 83%, 1% 57%, 0 29%, 1% 4%);
	}

	b {
    font-weight: 600;
	}
	li > a,
	p > a {
		text-decoration: underline;
	}
	li > a:hover,
	p > a:hover {
		text-decoration: none;
	}
	li {
		margin: 0.25rem 0;
	}
</style>

<script>
	import { isMenuOpen } from '../lib/store.ts';
	
	const menuBtn = document.getElementById('toggleMenu')!;

	function toggleMenu() {
		const nextMenuState = !isMenuOpen.get();
		menuBtn.innerHTML = nextMenuState ? 'Chiudi' : 'Menu';
		isMenuOpen.set(nextMenuState);
	}
	menuBtn.addEventListener('click', toggleMenu);
</script>

<script is:inline>
	const readabilityStyle = new CSSStyleSheet();
	readabilityStyle.replaceSync('.font-cursive { font-family: monospace !important; font-size: 105% !important; }');
	
	let improveReadability = 'off'; //di base √® "spento"

	if (typeof localStorage !== "undefined" && localStorage.getItem('improveReadability') ) {
		improveReadability = localStorage.getItem('improveReadability');
		setReadabilityImprovement() //avvio il toggle a ogni pagina in base al local storage precedente
	}

	function toggleReadabilityImprovement(){
		improveReadability = (improveReadability === "off") ? "on" : "off"; // faccio il toggle
		localStorage.setItem('improveReadability', improveReadability);
		setReadabilityImprovement() //attivo o disattivo
	}

	function setReadabilityImprovement(){
		if (improveReadability === "on") {
			document.adoptedStyleSheets = [readabilityStyle];
		} else {
			document.adoptedStyleSheets  = [];
		}
	}

</script>